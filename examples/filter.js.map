{"version":3,"sources":["webpack:///./examples/filter.js"],"names":["Demo","state","value","simpleTreeData","key","pId","label","disabled","selectable","treeDataSimpleMode","id","rootPId","onChange","length","console","log","setState","onSelect","onDataChange","data","forEach","i","margin","width","height","overflow","adjustY","adjustX","offset","maxHeight","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"examples/filter.js","sourcesContent":["/* eslint react/no-multi-comp:0, no-console:0 */\n\nimport 'rc-tree-select/assets/index.less';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport TreeSelect, { SHOW_PARENT } from 'rc-tree-select';\nimport { gData } from './util';\n\nclass Demo extends React.Component {\n  state = {\n    value: '11',\n    // value: ['0-0-0-0-value', '0-0-0-1-value', '0-0-0-2-value'],\n    simpleTreeData: [\n      { key: 1, pId: 0, label: 'a', value: 'a' },\n      { key: 11, pId: 1, label: 'a12', value: 'a12', disabled: true },\n      { key: 111, pId: 11, label: 'a00', value: 'a00', selectable: false },\n      { key: 2, pId: 0, label: 'b', value: 'b' },\n      { key: 20, pId: 2, label: 'b10', value: 'b10' },\n      { key: 21, pId: 2, label: 'b1', value: 'b1' },\n      { key: 22, pId: 2, label: 'b12', value: 'b12' },\n    ],\n    treeDataSimpleMode: {\n      id: 'key',\n      rootPId: 0,\n    },\n  }\n\n  onChange = (value) => {\n    if (value.length === 1) {\n      // return;\n    }\n    console.log('onChange', arguments, this.state.simpleTreeData);\n    this.setState({ value });\n  }\n\n  onSelect = () => {\n    // use onChange instead\n    // console.log(arguments);\n  }\n\n  onDataChange = () => {\n    const data = [...this.state.simpleTreeData];\n    data.forEach(i => {\n      if (i.key === 11) {\n        delete i.disabled;\n      }\n      if (i.key === 20) {\n        i.disabled = true;\n      }\n    });\n    this.setState({ simpleTreeData: data });\n  }\n\n  render() {\n    return (\n      <div style={{ margin: 20 }}>\n        <h2>check select</h2>\n        <TreeSelect\n          style={{ width: 300 }}\n          transitionName=\"rc-tree-select-dropdown-slide-up\"\n          choiceTransitionName=\"rc-tree-select-selection__choice-zoom\"\n          dropdownStyle={{ height: 200, overflow: 'auto' }}\n          dropdownPopupAlign={{ overflow: { adjustY: 0, adjustX: 0 }, offset: [0, 2] }}\n          placeholder={<i>请下拉选择</i>}\n          searchPlaceholder=\"please search\"\n          treeLine maxTagTextLength={10}\n          value={this.state.value}\n          treeData={gData}\n          treeNodeFilterProp=\"title\"\n          treeCheckable\n          onChange={this.onChange}\n          onSelect={this.onSelect}\n        />\n\n        <h2>use treeDataSimpleMode</h2>\n        <TreeSelect\n          style={{ width: 300 }}\n          dropdownStyle={{ maxHeight: 200, overflow: 'auto' }}\n          placeholder={<i>请下拉选择</i>}\n          searchPlaceholder=\"please search\"\n          treeLine maxTagTextLength={10}\n          inputValue={null}\n          value={this.state.value}\n          treeData={this.state.simpleTreeData}\n          treeDefaultExpandAll\n          treeNodeFilterProp=\"title\"\n          treeDataSimpleMode={this.state.treeDataSimpleMode}\n          treeCheckable showCheckedStrategy={SHOW_PARENT}\n          onChange={this.onChange}\n          onSelect={this.onSelect}\n        />\n        <button onClick={this.onDataChange}>change data</button>\n      </div>\n    );\n  }\n}\n\nReactDOM.render(<Demo />, document.getElementById('__react-content'));\n\n\n\n// WEBPACK FOOTER //\n// ./examples/filter.js"],"sourceRoot":""}