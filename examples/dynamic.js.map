{"version":3,"sources":["webpack:///./examples/dynamic.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;qBAEO,CAAkC;;kCACvB,CAAO;;;;qCACJ,GAAW;;;;yCACT,GAAgB;;;;iCACW,GAAQ;;AAE1D,KAAM,IAAI,GAAG,mBAAM,WAAW,CAAC;;;AAC7B,YAAS,EAAE,EAAE;AACb,kBAAe,6BAAG;AAChB,YAAO;AACL,eAAQ,EAAE,CACR,EAAC,KAAK,EAAE,UAAU,EAAE,KAAK,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAC,EAC7C,EAAC,KAAK,EAAE,UAAU,EAAE,KAAK,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAC,EAC7C,EAAC,KAAK,EAAE,UAAU,EAAE,KAAK,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,MAAM,EAAE,IAAI,EAAC,CAC5D;;AAED,YAAK,EAAE,EAAE,KAAK,EAAE,aAAa,EAAE,KAAK,EAAE,aAAa,EAAE;MACtD,CAAC;IACH;AACD,WAAQ,oBAAC,KAAK,EAAE;AACd,YAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;AACnB,SAAI,CAAC,QAAQ,CAAC;AACZ,YAAK,EAAL,KAAK;MACN,CAAC,CAAC;IACJ;AACD,aAAU,sBAAC,QAAQ,EAAE;;;AACnB,YAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;AACtB,YAAO,IAAI,OAAO,CAAC,UAAC,OAAO,EAAK;AAC9B,iBAAU,CAAC,YAAM;AACf,aAAM,QAAQ,gCAAO,MAAK,KAAK,CAAC,QAAQ,EAAC,CAAC;AAC1C,mCAAe,QAAQ,EAAE,QAAQ,CAAC,KAAK,CAAC,QAAQ,EAAE,6BAAkB,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;AAClF,eAAK,QAAQ,CAAC,EAAC,QAAQ,EAAR,QAAQ,EAAC,CAAC,CAAC;AAC1B,gBAAO,EAAE,CAAC;QACX,EAAE,GAAG,CAAC,CAAC;MACT,CAAC,CAAC;IACJ;AACD,SAAM,oBAAG;AACP,YACE;;SAAK,KAAK,EAAE,EAAC,OAAO,EAAE,WAAW,EAAE;OACjC;;;;QAAuB;OACvB;AACE,cAAK,EAAE,EAAE,KAAK,EAAE,GAAG,EAAG;AACtB,iBAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,QAAS;AAC9B,qBAAY;AACZ,cAAK,EAAE,IAAI,CAAC,KAAK,CAAC,KAAM;AACxB,iBAAQ,EAAE,IAAI,CAAC,QAAS;AACxB,iBAAQ,EAAE,IAAI,CAAC,UAAW;SAC1B;MACE,CACN;IACH;EACF,CAAC,CAAC;;AAEH,uBAAS,MAAM,CAAC,iCAAC,IAAI,OAAG,EAAE,QAAQ,CAAC,cAAc,CAAC,iBAAiB,CAAC,CAAC,C","file":"dynamic.js","sourcesContent":["/* eslint react/no-multi-comp:0, no-console:0 */\n\nimport 'rc-tree-select/assets/index.less';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport TreeSelect from 'rc-tree-select';\nimport { getNewTreeData, generateTreeNodes } from './util';\n\nconst Demo = React.createClass({\n  propTypes: {},\n  getInitialState() {\n    return {\n      treeData: [\n        {label: 'pNode 01', value: '0-0', key: '0-0'},\n        {label: 'pNode 02', value: '0-1', key: '0-1'},\n        {label: 'pNode 03', value: '0-2', key: '0-2', isLeaf: true},\n      ],\n      // value: '0-0',\n      value: { value: '0-0-0-value', label: '0-0-0-label' },\n    };\n  },\n  onChange(value) {\n    console.log(value);\n    this.setState({\n      value,\n    });\n  },\n  onLoadData(treeNode) {\n    console.log(treeNode);\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        const treeData = [...this.state.treeData];\n        getNewTreeData(treeData, treeNode.props.eventKey, generateTreeNodes(treeNode), 2);\n        this.setState({treeData});\n        resolve();\n      }, 500);\n    });\n  },\n  render() {\n    return (\n      <div style={{padding: '10px 30px'}}>\n        <h2>dynamic render</h2>\n        <TreeSelect\n          style={{ width: 300 }}\n          treeData={this.state.treeData}\n          labelInValue\n          value={this.state.value}\n          onChange={this.onChange}\n          loadData={this.onLoadData}\n        />\n      </div>\n    );\n  },\n});\n\nReactDOM.render(<Demo />, document.getElementById('__react-content'));\n\n\n\n/** WEBPACK FOOTER **\n ** ./examples/dynamic.js\n **/"],"sourceRoot":""}