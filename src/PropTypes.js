import { PropTypes } from 'react';
import { SHOW_ALL, SHOW_PARENT, SHOW_CHILD } from './strategies';

export const SelectPropTypes = {
  className: PropTypes.string,
  prefixCls: PropTypes.string,
  multiple: PropTypes.bool,
  filterTreeNode: PropTypes.any,
  showSearch: PropTypes.bool,
  disabled: PropTypes.bool,
  showArrow: PropTypes.bool,
  allowClear: PropTypes.bool,
  defaultOpen: PropTypes.bool,
  open: PropTypes.bool,
  transitionName: PropTypes.string,
  animation: PropTypes.string,
  choiceTransitionName: PropTypes.string,
  onClick: PropTypes.func,
  onChange: PropTypes.func,
  onSelect: PropTypes.func,
  onDeselect: PropTypes.func,
  onSearch: PropTypes.func,
  searchPlaceholder: PropTypes.string,
  placeholder: PropTypes.any,
  inputValue: PropTypes.any,
  value: PropTypes.oneOfType([PropTypes.array, PropTypes.string, PropTypes.object]),
  defaultValue: PropTypes.oneOfType([PropTypes.array, PropTypes.string, PropTypes.object]),
  label: PropTypes.any,
  defaultLabel: PropTypes.any,
  labelInValue: PropTypes.bool,
  dropdownStyle: PropTypes.object,
  drodownPopupAlign: PropTypes.object,
  onDropdownVisibleChange: PropTypes.func,
  maxTagTextLength: PropTypes.number,
  showCheckedStrategy: PropTypes.oneOf([
    SHOW_ALL, SHOW_PARENT, SHOW_CHILD,
  ]),
  treeCheckStrictly: PropTypes.bool,
  treeIcon: PropTypes.bool,
  treeLine: PropTypes.bool,
  treeDefaultExpandAll: PropTypes.bool,
  treeCheckable: PropTypes.oneOfType([
    PropTypes.bool,
    PropTypes.node,
  ]),
  treeNodeLabelProp: PropTypes.string,
  treeNodeFilterProp: PropTypes.string,
  treeData: PropTypes.array,
  treeDataSimpleMode: PropTypes.oneOfType([
    PropTypes.bool,
    PropTypes.object,
  ]),
  loadData: PropTypes.func,
};
